<?xml version="1.0" encoding="iso-8859-1"?>
<model-mapping>
	<complexe-model className="ch.globaz.pegasus.business.models.fortuneusuelle.BienImmobilierNonHabitable">
	
		<root-model name="simpleBienImmobilierNonHabitable" model-ref="ch.globaz.pegasus.business.models.fortuneusuelle.SimpleBienImmobilierNonHabitable"/>
		
		<linked-model name="simpleDonneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader" join-type="INNER">
			<join-group operator="AND">
				<join-field name="idDonneeFinanciereHeader" operation="EQUALS" field-ref="simpleBienImmobilierNonHabitable.idDonneeFinanciereHeader"/>
			</join-group>		
		</linked-model>
			
		<linked-model name="localite" model-ref="ch.globaz.pyxis.business.model.LocaliteSimpleModel" join-type="LEFT_OUTER">
			<join-group operator="AND">
				<join-field name="idLocalite" operation="EQUALS" field-ref="simpleBienImmobilierNonHabitable.idCommuneDuBien"/>
			</join-group>	
		</linked-model>	
		
		<linked-model name="tiersCompagnie" model-ref="ch.globaz.pyxis.business.model.TiersSimpleModel" join-type="LEFT_OUTER">
			<join-group operator="AND">
				<join-field name="idTiers" operation="EQUALS" field-ref="simpleBienImmobilierNonHabitable.nomCompagnie"/>
			</join-group>
		</linked-model>			
					
		<linked-model name="simplePays" model-ref="ch.globaz.pyxis.business.model.PaysSimpleModel" join-type="LEFT_OUTER">
			<join-group operator="AND">
				<join-field name="idPays" operation="EQUALS" field-ref="simpleBienImmobilierNonHabitable.idPays"/>
			</join-group>		
		</linked-model>					
					
		<search-definition>
			<search-group operator="AND">
				<search-field name="forIdBienImmobilierNonHabitable" operation="EQUALS" field-ref="simpleBienImmobilierNonHabitable.idBienImmobilierNonHabitable"/>
				<search-field name="forIdEntity" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idEntity"/>
				<search-field name="idDroitMembreFamille" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDroitMembreFamille"/>
				<search-field name="forIdDonneeFinanciereHeader" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDonneeFinanciereHeader"/>
			</search-group>
		</search-definition>
		<search-definition name="forVersionedBINH">
			<search-group operator="AND">
				<search-field name="forIdEntity" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idEntity"/>
				<search-field name="idDroitMembreFamille" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDroitMembreFamille"/>
				<search-literal>
					<declare-model name="versionDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleVersionDroit"/>
					<declare-model name="donneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader"/>
					<![CDATA[ 
					 	#{simpleDonneeFinanciereHeader.isSupprime} = 2 and
						#{simpleDonneeFinanciereHeader.idVersionDroit} =
							(
								select MAX( #{versionDroit.idVersionDroit} ) from @{versionDroit} 
									inner join  @{donneeFinanciereHeader} on ( #{versionDroit.idVersionDroit} = #{donneeFinanciereHeader.idVersionDroit} )
									where #{simpleDonneeFinanciereHeader.idEntity} = #{donneeFinanciereHeader.idEntity}
										and #{versionDroit.noVersion} <= ${forNumeroVersion:versionDroit.noVersion}
							)
					 ]]>
				</search-literal>
			</search-group>
		</search-definition>	
		
		<order-by>
			<order-field field-ref="simpleDonneeFinanciereHeader.idEntityGroup" />
			<order-field field-ref="simpleDonneeFinanciereHeader.dateDebut" order="DESC" />
		</order-by>			
	</complexe-model>
</model-mapping>