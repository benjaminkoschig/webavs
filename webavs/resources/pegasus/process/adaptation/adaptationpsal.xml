<?xml version="1.0" encoding="iso-8859-1"?>
<model-mapping>

	<complexe-model className="ch.globaz.pegasus.business.models.process.adaptation.AdaptationPsal">
	
		<root-model name="simpleDonneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader" select-fields="true" />
		
		<select-fields distinct="true"> <!-- On doit mettre le distinc à cause de couple séparé par la maladie-->
			<select-field name="idDemande" field-ref="simpleDroit.idDemandePC" />
		</select-fields>
		
		<linked-model name="simpleCotisationsPsal" model-ref="ch.globaz.pegasus.business.models.revenusdepenses.SimpleCotisationsPsal" join-type="LEFT_OUTER" select-fields="true">
			<join-group operator="AND">
				<join-field name="idDonneeFinanciereHeader" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDonneeFinanciereHeader"/>
			</join-group>		
		</linked-model>
		
		<linked-model name="simpleVersionDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleVersionDroit" join-type="INNER"  select-fields="false">
			<join-group operator="AND">
				<join-field name="idVersionDroit" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idVersionDroit"/>
			</join-group>		
		</linked-model>

	   <linked-model name="simpleDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDroit" join-type="INNER"  select-fields="false">
			<join-group operator="AND">
				<join-field name="idDroit" operation="EQUALS" field-ref="simpleVersionDroit.idDroit"/>
			</join-group>		
		</linked-model>
		
		<linked-model name="simpleDemande" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande" join-type="INNER"  select-fields="false">
			<join-group operator="AND">
				<join-field name="idDemande" operation="EQUALS" field-ref="simpleDroit.idDemandePC"/>
			</join-group>		
		</linked-model>

		<linked-model name="simpleDroitMembreFamille" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDroitMembreFamille" join-type="INNER" select-fields="true">
			<join-group operator="AND">
				<join-field name="idDroitMembreFamille" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDroitMembreFamille"/>
				<join-field name="idDroit" operation="EQUALS" field-ref="simpleVersionDroit.idDroit"/>
			</join-group>		
		</linked-model>

 		<!--64003004 = validé; 64003004 = calculé , 64063010= CS_MOTIF_DROIT_ADAPTATION-->
		<search-definition name="forAdaptationVersioned">
			<search-group operator="AND">
				<search-field name="forDateFin" operation="NULL" field-ref="simpleDonneeFinanciereHeader.dateFin"/>
				<search-field name="forMontantCotisationsAnnuelle" operation="EQUALS" field-ref="simpleCotisationsPsal.montantCotisationsAnnuelles"/>
				<search-field name="forCsEtat" operation="EQUALS" field-ref="simpleDemande.csEtatDemande"/>
				<search-literal>
					<declare-model name="versionDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleVersionDroit"/>
					<declare-model name="donneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader"/>
					<![CDATA[ 
					 	#{simpleDonneeFinanciereHeader.isSupprime} = 2 and
						#{simpleDonneeFinanciereHeader.idVersionDroit} =
							(
								select MAX( #{versionDroit.idVersionDroit} ) 
								  from @{versionDroit} 
								 inner join @{donneeFinanciereHeader} 
								    on ( #{versionDroit.idVersionDroit} = #{donneeFinanciereHeader.idVersionDroit} )
								 where #{simpleDonneeFinanciereHeader.idEntity} = #{donneeFinanciereHeader.idEntity}
								   and #{donneeFinanciereHeader.csTypeDonneeFinanciere}  = 64007027
								   and #{versionDroit.csEtatDroit} in (64003004, 64003005) 
							)
					 ]]>
				</search-literal>
			</search-group>
		</search-definition>		

		<order-by name="idDroit">
			<order-field field-ref="simpleDroit.idDemandePC" />
		</order-by>
	</complexe-model>
</model-mapping>