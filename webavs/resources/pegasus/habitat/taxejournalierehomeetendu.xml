<?xml version="1.0" encoding="iso-8859-1"?>
<model-mapping>
	<complexe-model className="ch.globaz.pegasus.business.models.habitat.TaxeJournaliereHomeEtendu">
		<root-model name="simpleTaxeJournaliereHome" model-ref="ch.globaz.pegasus.business.models.habitat.SimpleTaxeJournaliereHome" />
		<linked-model name="simpleDonneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader" join-type="INNER">
			<join-group operator="AND">
				<join-field name="idDonneeFinanciereHeader" operation="EQUALS" field-ref="simpleTaxeJournaliereHome.idDonneeFinanciereHeader"/>
			</join-group>		
		</linked-model>
		
		<linked-model name="droitMembreFamilleEtendu" model-ref="ch.globaz.pegasus.business.models.droit.DroitMembreFamilleEtendu" join-type="INNER">
			<join-group operator="AND">
				<join-field name="droitMembreFamille.simpleDroitMembreFamille.idDroitMembreFamille" operation="EQUALS" field-ref="simpleDonneeFinanciereHeader.idDroitMembreFamille"/>
			</join-group>		
		</linked-model>		
		
		<linked-model name="typeChambre" model-ref="ch.globaz.pegasus.business.models.home.TypeChambre" join-type="INNER" >
			<join-group operator="AND">
				<join-field name="simpleTypeChambre.idTypeChambre" operation="EQUALS" field-ref="simpleTaxeJournaliereHome.idTypeChambre"/>
			</join-group>
		</linked-model>
		
		<search-definition name="forTransfertDossierDecisionSuppression"> 
			<search-group operator="AND">
				<search-field name="forIdTiers" operation="EQUALS" field-ref="droitMembreFamilleEtendu.droitMembreFamille.membreFamille.simpleMembreFamille.idTiers" />
				<search-literal>				
					<declare-model name="versionDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleVersionDroit"/>
					<declare-model name="donneeFinanciereHeader" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDonneeFinanciereHeader"/>
					<![CDATA[ 
					    #{simpleDonneeFinanciereHeader.isSupprime} = 2 AND
						#{simpleDonneeFinanciereHeader.idVersionDroit} =
							(
								select MAX( #{versionDroit.idVersionDroit} ) from @{versionDroit} 
									inner join  @{donneeFinanciereHeader} on ( #{versionDroit.idVersionDroit} = #{donneeFinanciereHeader.idVersionDroit} )
									where #{simpleDonneeFinanciereHeader.idEntity} = #{donneeFinanciereHeader.idEntity}
										
										 
							)
					 ]]>
				</search-literal>				
			</search-group>
		</search-definition>

		<order-by name="orderByDateDesc">
			<order-field field-ref="simpleTaxeJournaliereHome.dateEntreeHome" order="DESC"/>
		</order-by>

	</complexe-model>
</model-mapping>