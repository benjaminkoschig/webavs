/*
 * Generated by JasperReports - 12.08.11 12:04
 */
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.fill.*;

import java.util.*;
import java.math.*;
import java.text.*;
import java.io.*;
import java.net.*;


/**
 *
 */
public class HERCULE_DOCUMENT_D002 extends JRCalculator
{


    /**
     *
     */
    private JRFillParameter parameter_REPORT_CONNECTION = null;
    private JRFillParameter parameter_REPORT_PARAMETERS_MAP = null;
    private JRFillParameter parameter_P_SUBREPORT_HEADER = null;
    private JRFillParameter parameter_P_CONCERNE = null;
    private JRFillParameter parameter_P_CORPS = null;
    private JRFillParameter parameter_P_CAS2 = null;
    private JRFillParameter parameter_P_SUBREPORT_SIGNATURE = null;
    private JRFillParameter parameter_P_SIGNATURE = null;
    private JRFillParameter parameter_REPORT_DATA_SOURCE = null;
    private JRFillParameter parameter_MODEL_PATH = null;
    private JRFillParameter parameter_REPORT_SCRIPTLET = null;
    private JRFillParameter parameter_P_CAS1 = null;


    private JRFillVariable variable_PAGE_NUMBER = null;
    private JRFillVariable variable_COLUMN_NUMBER = null;
    private JRFillVariable variable_REPORT_COUNT = null;
    private JRFillVariable variable_PAGE_COUNT = null;
    private JRFillVariable variable_COLUMN_COUNT = null;
    private JRFillVariable variable_IMAGE_LOGO = null;
    private JRFillVariable variable_grp1_COUNT = null;


    /**
     *
     */
    public void customizedInit(
        Map pm,
        Map fm,
        Map vm
        ) throws JRException
    {
        parameter_REPORT_CONNECTION = (JRFillParameter)parsm.get("REPORT_CONNECTION");
        parameter_REPORT_PARAMETERS_MAP = (JRFillParameter)parsm.get("REPORT_PARAMETERS_MAP");
        parameter_P_SUBREPORT_HEADER = (JRFillParameter)parsm.get("P_SUBREPORT_HEADER");
        parameter_P_CONCERNE = (JRFillParameter)parsm.get("P_CONCERNE");
        parameter_P_CORPS = (JRFillParameter)parsm.get("P_CORPS");
        parameter_P_CAS2 = (JRFillParameter)parsm.get("P_CAS2");
        parameter_P_SUBREPORT_SIGNATURE = (JRFillParameter)parsm.get("P_SUBREPORT_SIGNATURE");
        parameter_P_SIGNATURE = (JRFillParameter)parsm.get("P_SIGNATURE");
        parameter_REPORT_DATA_SOURCE = (JRFillParameter)parsm.get("REPORT_DATA_SOURCE");
        parameter_MODEL_PATH = (JRFillParameter)parsm.get("MODEL_PATH");
        parameter_REPORT_SCRIPTLET = (JRFillParameter)parsm.get("REPORT_SCRIPTLET");
        parameter_P_CAS1 = (JRFillParameter)parsm.get("P_CAS1");


        variable_PAGE_NUMBER = (JRFillVariable)varsm.get("PAGE_NUMBER");
        variable_COLUMN_NUMBER = (JRFillVariable)varsm.get("COLUMN_NUMBER");
        variable_REPORT_COUNT = (JRFillVariable)varsm.get("REPORT_COUNT");
        variable_PAGE_COUNT = (JRFillVariable)varsm.get("PAGE_COUNT");
        variable_COLUMN_COUNT = (JRFillVariable)varsm.get("COLUMN_COUNT");
        variable_IMAGE_LOGO = (JRFillVariable)varsm.get("IMAGE_LOGO");
        variable_grp1_COUNT = (JRFillVariable)varsm.get("grp1_COUNT");
    }


    /**
     * Test method
     */
    public static void helloJasper()
    {
        System.out.println("------------------------------");
        System.out.println(" Hello, Jasper!...");
        System.out.println("------------------------------");
    }


    /**
     *
     */
    public Object evaluate(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 312 : // textField_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CONCERNE.getValue()));
                break;
            }
            case 320 : // printWhen_1
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.Integer)variable_PAGE_NUMBER.getValue()).intValue() > 1));
                break;
            }
            case 306 : // parameterDefaultValue_MODEL_PATH
            {
                value = (java.lang.String)("U:\\Musca\\muscaRoot\\model\\");
                break;
            }
            case 310 : // variable_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 311 : // variableInitialValue_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 299 : // variableInitialValue_COLUMN_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 304 : // variable_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 315 : // parametersMap_2
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 316 : // subreport_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_SIGNATURE.getValue()));
                break;
            }
            case 307 : // parameterDefaultValue_P_CONCERNE
            {
                value = (java.lang.String)("Monsieur,\n\nNous vous remercions de votre versement du 18 juillet 2003 qui solde le décompte de cotisations mentionné ci-dessus.\n\nNous référant à l'article 41 bis, alinéa 1, du Règlement sur l'AVS (RAVS) et à la \"Circulaire sur les intérêts moratoires et rémunératoires\", nousconstatons que le paiement est tardif. En application de l'article 42 RAVS, nous devons facturer des intérêts moratoires dont le calcul est le suivant:");
                break;
            }
            case 301 : // variableInitialValue_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 313 : // parametersMap_1
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 300 : // variable_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 317 : // textField_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS1.getValue()));
                break;
            }
            case 305 : // variableInitialValue_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 319 : // textField_4
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CORPS.getValue()));
                break;
            }
            case 298 : // variableInitialValue_PAGE_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 318 : // textField_3
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS2.getValue()));
                break;
            }
            case 309 : // group_grp1
            {
                value = (java.lang.Object)(null);
                break;
            }
            case 302 : // variable_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 308 : // variable_IMAGE_LOGO
            {
                value = (java.lang.String)(((java.lang.String)parameter_MODEL_PATH.getValue())+"cfc_logo.gif");
                break;
            }
            case 303 : // variableInitialValue_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 314 : // subreport_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_HEADER.getValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateOld(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 312 : // textField_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CONCERNE.getValue()));
                break;
            }
            case 320 : // printWhen_1
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.Integer)variable_PAGE_NUMBER.getOldValue()).intValue() > 1));
                break;
            }
            case 306 : // parameterDefaultValue_MODEL_PATH
            {
                value = (java.lang.String)("U:\\Musca\\muscaRoot\\model\\");
                break;
            }
            case 310 : // variable_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 311 : // variableInitialValue_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 299 : // variableInitialValue_COLUMN_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 304 : // variable_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 315 : // parametersMap_2
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 316 : // subreport_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_SIGNATURE.getValue()));
                break;
            }
            case 307 : // parameterDefaultValue_P_CONCERNE
            {
                value = (java.lang.String)("Monsieur,\n\nNous vous remercions de votre versement du 18 juillet 2003 qui solde le décompte de cotisations mentionné ci-dessus.\n\nNous référant à l'article 41 bis, alinéa 1, du Règlement sur l'AVS (RAVS) et à la \"Circulaire sur les intérêts moratoires et rémunératoires\", nousconstatons que le paiement est tardif. En application de l'article 42 RAVS, nous devons facturer des intérêts moratoires dont le calcul est le suivant:");
                break;
            }
            case 301 : // variableInitialValue_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 313 : // parametersMap_1
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 300 : // variable_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 317 : // textField_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS1.getValue()));
                break;
            }
            case 305 : // variableInitialValue_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 319 : // textField_4
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CORPS.getValue()));
                break;
            }
            case 298 : // variableInitialValue_PAGE_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 318 : // textField_3
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS2.getValue()));
                break;
            }
            case 309 : // group_grp1
            {
                value = (java.lang.Object)(null);
                break;
            }
            case 302 : // variable_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 308 : // variable_IMAGE_LOGO
            {
                value = (java.lang.String)(((java.lang.String)parameter_MODEL_PATH.getValue())+"cfc_logo.gif");
                break;
            }
            case 303 : // variableInitialValue_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 314 : // subreport_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_HEADER.getValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


    /**
     *
     */
    public Object evaluateEstimated(int id) throws Throwable
    {
        Object value = null;

        switch (id)
        {
            case 312 : // textField_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CONCERNE.getValue()));
                break;
            }
            case 320 : // printWhen_1
            {
                value = (java.lang.Boolean)(new Boolean(((java.lang.Integer)variable_PAGE_NUMBER.getEstimatedValue()).intValue() > 1));
                break;
            }
            case 306 : // parameterDefaultValue_MODEL_PATH
            {
                value = (java.lang.String)("U:\\Musca\\muscaRoot\\model\\");
                break;
            }
            case 310 : // variable_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 311 : // variableInitialValue_grp1_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 299 : // variableInitialValue_COLUMN_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 304 : // variable_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 315 : // parametersMap_2
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 316 : // subreport_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_SIGNATURE.getValue()));
                break;
            }
            case 307 : // parameterDefaultValue_P_CONCERNE
            {
                value = (java.lang.String)("Monsieur,\n\nNous vous remercions de votre versement du 18 juillet 2003 qui solde le décompte de cotisations mentionné ci-dessus.\n\nNous référant à l'article 41 bis, alinéa 1, du Règlement sur l'AVS (RAVS) et à la \"Circulaire sur les intérêts moratoires et rémunératoires\", nousconstatons que le paiement est tardif. En application de l'article 42 RAVS, nous devons facturer des intérêts moratoires dont le calcul est le suivant:");
                break;
            }
            case 301 : // variableInitialValue_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 313 : // parametersMap_1
            {
                value = (java.util.Map)(new java.util.HashMap(((java.util.Map)parameter_REPORT_PARAMETERS_MAP.getValue())));
                break;
            }
            case 300 : // variable_REPORT_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 317 : // textField_2
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS1.getValue()));
                break;
            }
            case 305 : // variableInitialValue_COLUMN_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 319 : // textField_4
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CORPS.getValue()));
                break;
            }
            case 298 : // variableInitialValue_PAGE_NUMBER
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 318 : // textField_3
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_CAS2.getValue()));
                break;
            }
            case 309 : // group_grp1
            {
                value = (java.lang.Object)(null);
                break;
            }
            case 302 : // variable_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(1));
                break;
            }
            case 308 : // variable_IMAGE_LOGO
            {
                value = (java.lang.String)(((java.lang.String)parameter_MODEL_PATH.getValue())+"cfc_logo.gif");
                break;
            }
            case 303 : // variableInitialValue_PAGE_COUNT
            {
                value = (java.lang.Integer)(new Integer(0));
                break;
            }
            case 314 : // subreport_1
            {
                value = (java.lang.String)(((java.lang.String)parameter_P_SUBREPORT_HEADER.getValue()));
                break;
            }
           default :
           {
           }
        }
        
        return value;
    }


}
