<?xml version="1.0" encoding="iso-8859-1"?>
<model-mapping>
	<complexe-model className="ch.globaz.pegasus.business.models.dossier.DossierRCList">
		<root-model name="simpleDossier" model-ref="ch.globaz.pegasus.business.models.dossier.SimpleDossier"/>
		<linked-model name="demandePrestation" model-ref="ch.globaz.prestation.business.models.demande.DemandePrestation" join-type="INNER">
			<join-group operator="AND">
				<join-field name="demandePrestation.idDemande" operation="EQUALS" field-ref="simpleDossier.idDemandePrestation"/>
			</join-group>		
		</linked-model>
		<linked-model name="simpleDemande" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande" join-type="LEFT_OUTER">
			<join-group operator="AND">
				<join-field name="idDossier" operation="EQUALS" field-ref="simpleDossier.idDossier"/>
			</join-group>		
		</linked-model>
			
		<search-definition>
			<search-group operator="AND">
				<search-field name="likeNom" operation="LIKE" field-ref="demandePrestation.personneEtendue.tiers.designationUpper1"/>  
				<search-field name="likePrenom" operation="LIKE" field-ref="demandePrestation.personneEtendue.tiers.designationUpper2"/>  
				<search-field name="likeNss" operation="LIKE" field-ref="demandePrestation.personneEtendue.personneEtendue.numAvsActuel"/>  
				<search-field name="forCsSexe" operation="EQUALS" field-ref="demandePrestation.personneEtendue.personne.sexe"/>  
				<search-field name="forDateNaissance" operation="EQUALS" field-ref="demandePrestation.personneEtendue.personne.dateNaissance"/>
				<search-field name="forIdTiers" operation="EQUALS" field-ref="demandePrestation.demandePrestation.idTiers"/>
				<search-field name="forIdDossier" operation="EQUALS" field-ref="simpleDossier.idDossier"/>
				<search-field name="forIdGestionnaire" operation="EQUALS" field-ref="simpleDossier.idGestionnaire"/>
				<search-field name="inCsEtatDemande" operation="IN" field-ref="simpleDemande.csEtatDemande"/>
				
				<search-literal>
					<declare-model name="sDemandeMax" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande"/>
					<declare-model name="sDemande" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande"/>
					
					<![CDATA[ 
						(#{simpleDemande.idDemande}  =
										(select max(#{sDemandeMax.idDemande})
								  		  from @{sDemandeMax} 
								 	     where #{sDemandeMax.idDossier} = #{simpleDossier.idDossier}
								 	       and (#{sDemandeMax.isPurRetro} = 2 
								 	           or #{sDemandeMax.dateDebut} = (select max (#{sDemande.dateDebut})
								 	           									from @{sDemande} 
								 	           								   where #{sDemande.idDossier} = #{simpleDossier.idDossier}
								 	           								)
								 	           	 and #{sDemandeMax.isPurRetro} = 1 							
								 	          )
								 	      )
							OR (#{simpleDemande.idDemande} IS NULL  OR #{simpleDemande.idDemande} = 0)
						)
					 ]]>
				</search-literal> 
			</search-group>
		</search-definition>
		
		<search-definition name="rechercheFamille">
			<search-group operator="AND"> 				
				<search-field name="forIdTiers" operation="EQUALS" field-ref="demandePrestation.demandePrestation.idTiers"/>
				<search-field name="forIdDossier" operation="EQUALS" field-ref="simpleDossier.idDossier"/>
				<search-field name="forIdGestionnaire" operation="EQUALS" field-ref="simpleDossier.idGestionnaire"/>
				<search-field name="inCsEtatDemande" operation="IN" field-ref="simpleDemande.csEtatDemande"/>
				
				<search-literal>
					<declare-model name="sDemandeMax" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande"/>
					<declare-model name="sDemande" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande"/>
					<declare-model name="sDemandeDroit" model-ref="ch.globaz.pegasus.business.models.demande.SimpleDemande"/>
					<declare-model name="sDroit" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDroit"/>
					<declare-model name="sDroitMembreFamille" model-ref="ch.globaz.pegasus.business.models.droit.SimpleDroitMembreFamille"/>
					<declare-model name="sMembreFamille" model-ref="ch.globaz.hera.business.models.famille.SimpleMembreFamille"/>
					<declare-model name="sTiers" model-ref="ch.globaz.pyxis.business.model.TiersSimpleModel"/>
					<declare-model name="sPersonne" model-ref="ch.globaz.pyxis.business.model.PersonneEtendueSimpleModel"/>
					<![CDATA[ 
						(#{simpleDemande.idDemande} =(
								select max(#{sDemandeMax.idDemande})
								  		  from @{sDemandeMax} 
								 	     where #{sDemandeMax.idDossier} = #{simpleDossier.idDossier}
								 	       and (#{sDemandeMax.isPurRetro} = 2 
								 	           or #{sDemandeMax.dateDebut} = (select max (#{sDemande.dateDebut})
								 	           									from @{sDemande} 
								 	           								   where #{sDemande.idDossier} = #{simpleDossier.idDossier}
								 	           								)
								 	           	 and #{sDemandeMax.isPurRetro} = 1 							
								 	          )
							)
							 OR (#{simpleDemande.idDemande} IS NULL  OR #{simpleDemande.idDemande} = 0)) 
						
						AND 0 < ( select count(*) from @{sDemandeDroit}
									inner join @{sDroit} on (#{sDemandeDroit.idDemande} = #{sDroit.idDemandePC})
									inner join @{sDroitMembreFamille} on (#{sDroit.idDroit} = #{sDroitMembreFamille.idDroit})
									inner join @{sMembreFamille} on (#{sDroitMembreFamille.idMembreFamilleSF} = #{sMembreFamille.idMembreFamille})
									inner join @{sTiers} on (#{sMembreFamille.idTiers} = #{sTiers.idTiers})
									inner join @{sPersonne} on (#{sMembreFamille.idTiers} = #{sPersonne.idTiers})
									where #{simpleDemande.idDossier} = #{sDemandeDroit.idDossier} AND
										  #{sTiers.designationUpper1} like ${likeNom:sTiers.designationUpper1} AND		
										  #{sTiers.designationUpper2} like ${likePrenom:sTiers.designationUpper2} AND								  
										  #{sPersonne.numAvsActuel} like ${likeNss:sPersonne.numAvsActuel}								  							  
						)	
					 ]]>
				</search-literal> 
			</search-group>
		</search-definition>
		
		<order-by name="nomPrenom">
			<order-field field-ref="demandePrestation.personneEtendue.tiers.designationUpper1"/>
			<order-field field-ref="demandePrestation.personneEtendue.tiers.designationUpper2"/>
		</order-by>
		
	</complexe-model>
</model-mapping>