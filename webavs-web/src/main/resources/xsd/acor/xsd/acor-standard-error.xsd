<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           targetNamespace="http://www.zas.admin.ch/xmlns/acor-standard-erreur/0"
           xmlns:se="http://www.zas.admin.ch/xmlns/acor-standard-erreur/0"
           elementFormDefault="qualified" attributeFormDefault="unqualified" version="0.1">
    <xs:complexType name="StandardError">
        <xs:sequence>
            <xs:element name="jsonPathId" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        identifie la property ou l'objet concerné par cette erreur sous forme de jsonPath métier (inhost) vers sa cible
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="jsonPathWith" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        si il s'agit d'une erreur de type {@link StandardErrorType.OUTER}, on trouve dans cette liste les identifiant des objets/properties (sous forme de jsonPath métier) qui causent l'erreur sur cet objet (identifié par  {@link jsonPathId}).  On peut également renseigner ce champ dans la même idée avec un jsonPath vers une propriété du même objet (dans ce cas l'erreur sera de type {@link StandardErrorType.INNER})
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="labelId" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        identifiant de l'erreur. En théorie n'importe quel identifiant, en pratique on identifie l'erreur avec le chemin d'accès vers son label dans le fichier "fr.json". Par exemple "ERROR.PERIODE.CHRONOLOGY".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="level">
                <xs:annotation>
                    <xs:documentation>
                        niveau de l'erreur
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:enumeration value="0"><xs:annotation><xs:documentation>CRITICAL_DISPLAY : affichage de la famille impossible</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="1"><xs:annotation><xs:documentation>CRITICAL : expertise interdite</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="2"><xs:annotation><xs:documentation>STANDARD : expertise autorisée mais situation en principe interdite par les directives</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="3"><xs:annotation><xs:documentation>WARNING : avertissement pour une situation peu courante mais possible</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="4"><xs:annotation><xs:documentation>FINE : recherche de tous les problèmes potentiel (va au delà de ce qui est nécessaire pour l'analyse)</xs:documentation></xs:annotation></xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="type">
                <xs:annotation>
                    <xs:documentation>
                        type d'erreur
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:enumeration value="0"><xs:annotation><xs:documentation>NONE : pas d'erreur. En principe ne doit pas arriver</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="1"><xs:annotation><xs:documentation>SINGLE : une seule notion est concernée par l'erreur</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="2"><xs:annotation><xs:documentation>INNER : plusieurs notions (au sein de la même super notion) sont concernées par l'erreur. Les autres notions concernées sont (en principe) indiqueé dans jsonPathWith</xs:documentation></xs:annotation></xs:enumeration>
                        <xs:enumeration value="3"><xs:annotation><xs:documentation>OUTER : plusieurs notions sont concernées par l'erreur (et elles n'ont pas le même parent). Les autres notions concernées sont (en principe) indiqueé dans jsonPathWith</xs:documentation></xs:annotation></xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="label" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        le label en texte de l'erreur. En principe cette notion n'est pas renseignée car elle dépend de la langue. C'est la responsabilité de l'interpréteur d'erreur (qui qu'il soit) de retrouver ce label grâce à labelId
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="parameters" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        valeurs des paramètres métier associés à l'erreurs. N'est documenté qu'en cas de nécessité, c'est-à-dire si le texte en clair (lable) doit indiquer explicitement les valeurs concernée par l'erreur
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="origin" type="se:originType">
                <xs:annotation>
                    <xs:documentation>
                        origine technique ou métier
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="debug" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        message d'erreur destiné au développeur (trace de l'exception) si il s'agit d'une exception soulevée par un service côté backend (absent sinon)
                        doit en principe contenir quelque chose si origin="TECHNICAL_..."
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="originType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CORE"><xs:annotation><xs:documentation>CORE : données métier</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_CONVERT"><xs:annotation><xs:documentation>TECHNICAL_CONVERT : problème de conversion de données</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_EXPERTISE"><xs:annotation><xs:documentation>TECHNICAL_EXPERTISE : problème grave lors de l'expertise</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_EXPORT"><xs:annotation><xs:documentation>TECHNICAL_EXPORT : problème du service d'exportation</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_IMPORT"><xs:annotation><xs:documentation>TECHNICAL_IMPORT : problème du service d'importation</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_TOKEN"><xs:annotation><xs:documentation>TECHNICAL_TOKEN : problème lié au token</xs:documentation></xs:annotation></xs:enumeration>
            <xs:enumeration value="TECHNICAL_UNKNOWN"><xs:annotation><xs:documentation>TECHNICAL_IMPORT : problème technique d'origine inconnue</xs:documentation></xs:annotation></xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
